version: 2
defaults: &defaults
  machine:
    image: circleci/classic:latest
  working_directory: ~/heracles

jobs:
  api-lint:
    docker:
      - image: circleci/openjdk:11-jdk
        working_directory: ~/heracles-api
    steps:
      - checkout
      - run:
          name: run linting
          command: |
              cd heracles-api
              ./bin/lint.sh

  api-unit-test:
    docker:
      - image: circleci/openjdk:11-jdk
        working_directory: ~/heracles-api
    steps:
      - checkout
      - run:
          name: run unit test
          command: |
              cd heracles-api
              ./bin/unit-test.sh

  api-integration-test:
    docker:
      - image: circleci/openjdk:11-jdk
        working_directory: ~/heracles-api
    steps:
      - checkout
      - run:
          name: run integration test
          command: |
            cd heracles-api
            ./bin/integration-test.sh

  ui-lint:
    docker:
      - image: circleci/node:10.16.3
        working_directory: ~/heracles-ui
    steps:
      - checkout

      # copy code to cwd
      - run:
          name: copy heracles-api to cwd
          command: cp -a heracles-ui/. .

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run:
          name: run linting
          command: ./bin/lint.sh

  ui-unit-test:
    docker:
      - image: circleci/node:10.16.3
        working_directory: ~/heracles-ui
    steps:
      - checkout

      # copy code to cwd
      - run:
          name: copy heracles-api to cwd
          command: cp -a heracles-ui/. .

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run:
          name: run unit tests
          command: ./bin/unit-test.sh

  end-to-end-tests-lint:
    docker:
      - image: circleci/openjdk:11-jdk
        working_directory: ~/heracles-e2e-tests
    steps:
      - checkout
      - run:
          name: run linting
          command: |
              cd heracles-e2e-tests
              ./bin/lint.sh

  end-to-end-test:
    <<: *defaults
    steps:
      - checkout

      - run:
          name: install firefox & geckodriver
          command: |
            sudo apt-get update
            sudo apt-get install libpango1.0-0
            sudo apt-get install firefox
            sudo ln -sf /usr/lib/firefox/firefox /usr/bin/firefox

      - run:
          name: Install Chrome
          command: |
            wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
            sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
            sudo apt-get update
            sudo apt-get install google-chrome-stable

      - run:
          name: build api image
          command: docker build heracles-api/. --tag heracles-api

      - run:
          name: build ui image
          command: docker build heracles-ui/. --tag heracles-ui

      - run:
          name: start backend server
          command: docker run --publish 8080:8080 heracles-api
          background: true

      - run:
          name: start frontend server
          command: docker run --publish 3000:3000 heracles-ui
          background: true

      - run:
          name: run end to end tests
          command: |
            cd heracles-e2e-tests
            ./bin/e2e-test.sh

workflows:
  version: 2
  commit:
    jobs:
      - api-lint
      - api-unit-test
      - api-integration-test
      - ui-lint
      - ui-unit-test
      - end-to-end-tests-lint
      - end-to-end-test
